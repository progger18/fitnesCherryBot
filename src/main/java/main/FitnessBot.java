package main;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.ArrayList;
import java.util.List;

public class FitnessBot extends TelegramLongPollingBot {
    private final String botToken;
    private final String botUsername;
    private final String webAppUrl;

    public FitnessBot(String botToken, String botUsername, String webAppUrl) {
        this.botToken = botToken;
        this.botUsername = botUsername;
        this.webAppUrl = webAppUrl;
    }

    @Override
    public String getBotUsername() {
        return botUsername;
    }

    @Override
    public String getBotToken() {
        return botToken;
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            switch (messageText) {
                case "/start":
                    sendWelcomeMessage(chatId);
                    break;
                case "/help":
                    sendHelpMessage(chatId);
                    break;
                case "üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ":
                    sendWebAppButton(chatId);
                    break;
                case "üí™ –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫":
                    sendTrainingPlan(chatId);
                    break;
                case "ü•ó –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è":
                    sendNutritionPlan(chatId);
                    break;
                case "üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ò–ú–¢":
                    sendBMICalculator(chatId);
                    break;
                case "üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è":
                    sendMotivationalQuote(chatId);
                    break;
                default:
                    sendDefaultMessage(chatId);
            }
        }
    }

    private void sendWelcomeMessage(long chatId) {
        String welcomeText = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n\n" +
                "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n" +
                "‚Ä¢ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ò–ú–¢ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n" +
                "‚Ä¢ –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n" +
                "‚Ä¢ –°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è\n" +
                "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é\n\n" +
                "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.";

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(welcomeText);
        message.setReplyMarkup(createMainMenuKeyboard());
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendHelpMessage(long chatId) {
        String helpText = "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n" +
                "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" +
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n" +
                "üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –û—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n" +
                "üí™ –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n" +
                "ü•ó –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è - –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è\n" +
                "üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ò–ú–¢ - –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ò–ú–¢\n" +
                "üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è - –ü–æ–ª—É—á–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ü–∏—Ç–∞—Ç—É";

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(helpText);
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendWebAppButton(long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:");
        message.setReplyMarkup(createWebAppKeyboard());
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendTrainingPlan(long chatId) {
        String trainingText = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏:\n\n" +
                "1Ô∏è‚É£ –ù–∞—á–∏–Ω–∞—é—â–∏–π\n" +
                "2Ô∏è‚É£ –°—Ä–µ–¥–Ω–∏–π\n" +
                "3Ô∏è‚É£ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π\n\n" +
                "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.";

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(trainingText);
        message.setReplyMarkup(createWebAppKeyboard());
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendNutritionPlan(long chatId) {
        String nutritionText = "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è —Å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å—é –∏ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º–∏, " +
                "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.";

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(nutritionText);
        message.setReplyMarkup(createWebAppKeyboard());
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendBMICalculator(long chatId) {
        String bmiText = "–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ò–ú–¢ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, " +
                "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.";

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(bmiText);
        message.setReplyMarkup(createWebAppKeyboard());
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendMotivationalQuote(long chatId) {
        String[] quotes = {
            "üí™ –¢–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–µ–ª - —ç—Ç–æ —Ç—ã —Å–∞–º.",
            "üåü –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ.",
            "üí´ –°–∏–ª–∞ –Ω–µ –≤ –º—ã—à—Ü–∞—Ö, –∞ –≤ —Å–∏–ª–µ –≤–æ–ª–∏.",
            "üî• –¢—è–∂–µ–ª–æ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ - –ª–µ–≥–∫–æ –≤ –∂–∏–∑–Ω–∏.",
            "‚ö°Ô∏è –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è, –∫–æ–≥–¥–∞ —É—Å—Ç–∞–ª. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª.",
            "üí™ –¢–≤–æ–µ —Ç–µ–ª–æ –º–æ–∂–µ—Ç –≤—ã–Ω–µ—Å—Ç–∏ –ø–æ—á—Ç–∏ –≤—Å–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —É–±–µ–¥–∏—Ç—å –≤ —ç—Ç–æ–º —Å–≤–æ–π —Ä–∞–∑—É–º.",
            "‚ú® –£—Å–ø–µ—Ö - —ç—Ç–æ —Å—É–º–º–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —É—Å–∏–ª–∏–π, –ø–æ–≤—Ç–æ—Ä—è–µ–º—ã—Ö –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å.",
            "üéØ –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –±—Ä–æ—Å–∞–µ—Ç —Ç–µ–±–µ –≤—ã–∑–æ–≤, —ç—Ç–æ –Ω–µ –º–µ–Ω—è–µ—Ç —Ç–µ–±—è.",
            "üí´ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ - —ç—Ç–æ –Ω–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ, –∞ –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —ç—Ç–æ –¥–µ–ª–∞—Ç—å.",
            "üåü –¢–≤–æ–µ –±—É–¥—É—â–µ–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —Å–µ–≥–æ–¥–Ω—è.",
            "üí™ –ù–µ –±–æ–π—Å—è –±—ã—Ç—å —Å–∏–ª—å–Ω—ã–º. –ö—Ç–æ-—Ç–æ –≥–¥–µ-—Ç–æ –≤ —ç—Ç–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø–æ–±–µ–¥–∏—Ç—å —Ç–µ–±—è.",
            "üî• –ë–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è, —Å—Ç–∞–Ω–µ—Ç —Å–∏–ª–æ–π, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å –∑–∞–≤—Ç—Ä–∞.",
            "üí´ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —ç—Ç–æ –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏.",
            "‚ö°Ô∏è –¢–≤–æ–µ —Ç–µ–ª–æ –º–æ–∂–µ—Ç –≤—Å–µ. –ù—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ —É–±–µ–¥–∏—Ç—å –≤ —ç—Ç–æ–º —Å–≤–æ–π —Ä–∞–∑—É–º.",
            "üåü –ö–∞–∂–¥–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ - —ç—Ç–æ —à–∞–≥ –∫ –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–∏ —Å–µ–±—è."
        };
        
        String randomQuote = quotes[(int) (Math.random() * quotes.length)];

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(randomQuote);
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendDefaultMessage(long chatId) {
        String defaultText = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é –∏–ª–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.";
        
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(defaultText);
        message.setReplyMarkup(createMainMenuKeyboard());
        
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private InlineKeyboardMarkup createMainMenuKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton webAppButton = new InlineKeyboardButton();
        webAppButton.setText("üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
        webAppButton.setWebApp(new org.telegram.telegrambots.meta.api.objects.webapp.WebAppInfo(webAppUrl));
        row1.add(webAppButton);
        
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        InlineKeyboardButton trainingButton = new InlineKeyboardButton();
        trainingButton.setText("üí™ –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫");
        trainingButton.setCallbackData("training");
        row2.add(trainingButton);
        
        List<InlineKeyboardButton> row3 = new ArrayList<>();
        InlineKeyboardButton nutritionButton = new InlineKeyboardButton();
        nutritionButton.setText("ü•ó –ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è");
        nutritionButton.setCallbackData("nutrition");
        row3.add(nutritionButton);
        
        List<InlineKeyboardButton> row4 = new ArrayList<>();
        InlineKeyboardButton bmiButton = new InlineKeyboardButton();
        bmiButton.setText("üìä –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ò–ú–¢");
        bmiButton.setCallbackData("bmi");
        row4.add(bmiButton);
        
        List<InlineKeyboardButton> row5 = new ArrayList<>();
        InlineKeyboardButton motivationButton = new InlineKeyboardButton();
        motivationButton.setText("üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è");
        motivationButton.setCallbackData("motivation");
        row5.add(motivationButton);
        
        rows.add(row1);
        rows.add(row2);
        rows.add(row3);
        rows.add(row4);
        rows.add(row5);
        
        markup.setKeyboard(rows);
        return markup;
    }

    private InlineKeyboardMarkup createWebAppKeyboard() {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        
        List<InlineKeyboardButton> row = new ArrayList<>();
        InlineKeyboardButton webAppButton = new InlineKeyboardButton();
        webAppButton.setText("üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
        webAppButton.setWebApp(new org.telegram.telegrambots.meta.api.objects.webapp.WebAppInfo(webAppUrl));
        row.add(webAppButton);
        
        rows.add(row);
        markup.setKeyboard(rows);
        return markup;
    }
} 