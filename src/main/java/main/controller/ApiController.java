package main.controller;

import main.model.UserData;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api")
public class ApiController {

    @PostMapping("/bmi")
    public String calculateBMI(@RequestBody UserData userData) {
        double height = userData.getHeight() / 100; // –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–º –≤ –º–µ—Ç—Ä—ã
        double bmi = userData.getWeight() / (height * height);
        String category;
        String recommendations;

        if (bmi < 18.5) {
            category = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å";
            recommendations = "‚Ä¢ –£–≤–µ–ª–∏—á—å—Ç–µ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å —Ä–∞—Ü–∏–æ–Ω–∞\n‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n‚Ä¢ –ü–∏—Ç–∞–π—Ç–µ—Å—å —á–∞—â–µ";
        } else if (bmi < 25) {
            category = "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å";
            recommendations = "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º\n‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ —Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å\n‚Ä¢ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–∏—Ç–∞–π—Ç–µ—Å—å";
        } else {
            category = "–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å";
            recommendations = "‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π\n‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤";
        }

        return String.format("–í–∞—à –ò–ú–¢: %.1f\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: %s\n\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n%s", bmi, category, recommendations);
    }

    @GetMapping("/training/{level}")
    public String getTrainingPlan(@PathVariable String level) {
        switch (level) {
            case "beginner":
                return "–ü–ª–∞–Ω –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö:\n\n" +
                       "1. –†–∞–∑–º–∏–Ω–∫–∞ (10 –º–∏–Ω—É—Ç)\n" +
                       "2. –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "3. –û—Ç–∂–∏–º–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 5 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "4. –ü–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥\n" +
                       "5. –†–∞—Å—Ç—è–∂–∫–∞ (10 –º–∏–Ω—É—Ç)\n\n" +
                       "–¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é";
            case "intermediate":
                return "–ü–ª–∞–Ω –¥–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è:\n\n" +
                       "1. –†–∞–∑–º–∏–Ω–∫–∞ (15 –º–∏–Ω—É—Ç)\n" +
                       "2. –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "3. –û—Ç–∂–∏–º–∞–Ω–∏—è: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "4. –ü–ª–∞–Ω–∫–∞: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 45 —Å–µ–∫—É–Ω–¥\n" +
                       "5. –í—ã–ø–∞–¥—ã: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "6. –†–∞—Å—Ç—è–∂–∫–∞ (15 –º–∏–Ω—É—Ç)\n\n" +
                       "–¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å 4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é";
            case "advanced":
                return "–ü–ª–∞–Ω –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö:\n\n" +
                       "1. –†–∞–∑–º–∏–Ω–∫–∞ (20 –º–∏–Ω—É—Ç)\n" +
                       "2. –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å–æ —à—Ç–∞–Ω–≥–æ–π: 5 –ø–æ–¥—Ö–æ–¥–æ–≤ –ø–æ 8 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "3. –ñ–∏–º –ª–µ–∂–∞: 5 –ø–æ–¥—Ö–æ–¥–æ–≤ –ø–æ 8 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "4. –°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞: 5 –ø–æ–¥—Ö–æ–¥–æ–≤ –ø–æ 6 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "5. –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è: 4 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 10 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n" +
                       "6. –ü–ª–∞–Ω–∫–∞: 5 –ø–æ–¥—Ö–æ–¥–æ–≤ –ø–æ 60 —Å–µ–∫—É–Ω–¥\n" +
                       "7. –†–∞—Å—Ç—è–∂–∫–∞ (20 –º–∏–Ω—É—Ç)\n\n" +
                       "–¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å 5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é";
            default:
                return "–ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏";
        }
    }

    @GetMapping("/nutrition")
    public String getNutritionPlan() {
        return "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:\n\n" +
               "ü•© –ë–µ–ª–∫–∏:\n" +
               "‚Ä¢ –ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞\n" +
               "‚Ä¢ –†—ã–±–∞ (–ª–æ—Å–æ—Å—å, —Ç—É–Ω–µ—Ü)\n" +
               "‚Ä¢ –Ø–π—Ü–∞\n" +
               "‚Ä¢ –¢–≤–æ—Ä–æ–≥\n\n" +
               "üåæ –£–≥–ª–µ–≤–æ–¥—ã:\n" +
               "‚Ä¢ –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π —Ä–∏—Å\n" +
               "‚Ä¢ –û–≤—Å—è–Ω–∫–∞\n" +
               "‚Ä¢ –ö–∏–Ω–æ–∞\n" +
               "‚Ä¢ –°–ª–∞–¥–∫–∏–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å\n\n" +
               "ü•ë –ñ–∏—Ä—ã:\n" +
               "‚Ä¢ –ê–≤–æ–∫–∞–¥–æ\n" +
               "‚Ä¢ –û—Ä–µ—Ö–∏\n" +
               "‚Ä¢ –û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ\n" +
               "‚Ä¢ –ñ–∏—Ä–Ω–∞—è —Ä—ã–±–∞\n\n" +
               "ü•¨ –û–≤–æ—â–∏:\n" +
               "‚Ä¢ –ë—Ä–æ–∫–∫–æ–ª–∏\n" +
               "‚Ä¢ –®–ø–∏–Ω–∞—Ç\n" +
               "‚Ä¢ –ë–æ–ª–≥–∞—Ä—Å–∫–∏–π –ø–µ—Ä–µ—Ü\n" +
               "‚Ä¢ –¶—É–∫–∏–Ω–∏";
    }

    @GetMapping("/motivation")
    public String getMotivationalQuote() {
        String[] quotes = {
            "–¢–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–µ–ª - —ç—Ç–æ —Ç—ã —Å–∞–º.",
            "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ.",
            "–°–∏–ª–∞ –Ω–µ –≤ –º—ã—à—Ü–∞—Ö, –∞ –≤ —Å–∏–ª–µ –≤–æ–ª–∏.",
            "–¢—è–∂–µ–ª–æ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ - –ª–µ–≥–∫–æ –≤ –∂–∏–∑–Ω–∏.",
            "–ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è, –∫–æ–≥–¥–∞ —É—Å—Ç–∞–ª. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª."
        };
        return "üí™ " + quotes[(int) (Math.random() * quotes.length)];
    }
} 